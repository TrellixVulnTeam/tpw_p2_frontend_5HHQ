{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Publication_Topics } from '../interfaces/publication_topics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let TopicsService = /*#__PURE__*/(() => {\n  class TopicsService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://127.0.0.1:7007/ws/';\n    }\n\n    getTopic(description) {\n      return this.http.get(this.baseUrl + 'pubtopicsgetByDescription?description=' + description);\n    }\n\n    getTopics() {\n      return this.http.get(this.baseUrl + 'pubtopicsgetAll');\n    }\n\n    getEnabledTopics() {\n      return this.http.get(this.baseUrl + 'pubtopicsenabledgetAll');\n    }\n\n    createTopic(form) {\n      let topic = new Publication_Topics();\n      topic.description = form.value.description;\n      topic.enabled = true;\n      return this.http.post(this.baseUrl + 'pubtopicscreate', topic, httpOptions);\n    }\n\n    updateTopic(topic, description) {\n      topic.description = description;\n      return this.http.put(this.baseUrl + 'pubtopicsupdate', topic, httpOptions);\n    }\n\n    disableTopic(topic) {\n      return this.http.put(this.baseUrl + 'pubtopicsdisable', topic, httpOptions);\n    }\n\n    enableTopic(topic) {\n      return this.http.put(this.baseUrl + 'pubtopicsenable', topic, httpOptions);\n    }\n\n  }\n\n  TopicsService.ɵfac = function TopicsService_Factory(t) {\n    return new (t || TopicsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TopicsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TopicsService,\n    factory: TopicsService.ɵfac,\n    providedIn: 'root'\n  });\n  return TopicsService;\n})();","map":null,"metadata":{},"sourceType":"module"}